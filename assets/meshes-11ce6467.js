import{h as M,V as C,t as G,l as y,I as m,N as s,B as S,i as A,j as T,k as f,O as v,P as B,T as P,m as U,n as I,p as F,d as N,D as O,M as h,C as j,c as D,R,a as z}from"./index-1601f4b8.js";import{r as E}from"./colors-e29a5892.js";class K extends M{scale=0;constructor(o=1){super(),this.scale=o}getPoint(o,u=new C){const p=o*3-1.5,x=Math.sin(2*Math.PI*o),b=0;return u.set(p,x,b).multiplyScalar(this.scale)}}const{scene:V}=G(),[k,H]=await Promise.all([y("glb/ship.glb"),y("glb/asteroid.glb")]),l={geometry:localStorage.getItem("sword.demo.mesh.geometry")??"box"},e=.5,L=new K(1);let t,n,i,a;if(l.geometry==="asteroid"){const r=H.scene.getObjectByName("Asteroid");a=r.geometry,t=new m(r.geometry,r.material,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}else if(l.geometry==="ship"){const r=k.scene.getObjectByName("Collider");a=r.geometry,t=new m(r.geometry,r.material,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}else{a={box:new S(e,e,e),cone:new A(e,e*2,3),cylinder:new T(e,e,e*2,5),icosahedron:new f(e),octahedron:new v(e,1),plane:new B(e,e),tetrahedron:new P(e),torus:new U(e,e/3,4,6),torusKnot:new I(e,e/3,15,6),tube:new F(L,15,e/2,6,!1)}[l.geometry];const r=new N;r.side=O,r.flatShading=!0,t=new m(a,r,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}t.castShadow=!0;t.receiveShadow=!0;V.add(t);const W=new h,c=new h;W.copy(t.matrixWorld).invert();const w=new j,d=20,g=d/2;for(let r=0;r<s;r+=1)w.set(E()),t.setColorAt(r,w),c.setPosition(Math.random()*d-g,Math.random()*d,Math.random()*d-g),t.setMatrixAt(r,c);t.instanceMatrix.needsUpdate=!0;t.instanceColor.needsUpdate=!0;await D(t,{type:R.Dynamic,collider:z.Trimesh,vertices:n,indices:i});
