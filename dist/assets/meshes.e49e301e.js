import{n as b,V as C,l as y,I as m,N as s,B as G,q as S,t as v,v as A,O as f,P as T,T as B,x as P,y as U,z as I,b as N,D as O,s as z,M as h,C as D,c as F,R,a as j}from"./index.f99e7c85.js";import{r as E}from"./colors.e0be99e4.js";class K extends b{scale=0;constructor(o=1){super(),this.scale=o}getPoint(o,u=new C){const p=o*3-1.5,x=Math.sin(2*Math.PI*o),M=0;return u.set(p,x,M).multiplyScalar(this.scale)}}const[V,q]=await Promise.all([y("ship.glb"),y("asteroid.glb")]),l={geometry:localStorage.getItem("sword.demo.mesh.geometry")??"box"},e=.5,H=new K(1);let t,n,i,a;if(l.geometry==="asteroid"){const r=q.scene.getObjectByName("Asteroid");a=r.geometry,t=new m(r.geometry,r.material,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}else if(l.geometry==="ship"){const r=V.scene.getObjectByName("Collider");a=r.geometry,t=new m(r.geometry,r.material,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}else{a={box:new G(e,e,e),cone:new S(e,e*2,3),cylinder:new v(e,e,e*2,5),icosahedron:new A(e),octahedron:new f(e,1),plane:new T(e,e),tetrahedron:new B(e),torus:new P(e,e/3,4,6),torusKnot:new U(e,e/3,15,6),tube:new I(H,15,e/2,6,!1)}[l.geometry];const r=new N;r.side=O,r.flatShading=!0,t=new m(a,r,s),n=new Float32Array(a.attributes.position.array),i=t.geometry.index?new Uint32Array(t.geometry.index.array):void 0}t.castShadow=!0;t.receiveShadow=!0;z.add(t);const W=new h,c=new h;W.copy(t.matrixWorld).invert();const w=new D,d=20,g=d/2;for(let r=0;r<s;r+=1)w.set(E()),t.setColorAt(r,w),c.setPosition(Math.random()*d-g,Math.random()*d,Math.random()*d-g),t.setMatrixAt(r,c);t.instanceMatrix.needsUpdate=!0;t.instanceColor.needsUpdate=!0;await F(t,{type:R.Dynamic,collider:j.Trimesh,vertices:n,indices:i});
